{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/posts.service.ts","./src/environments/environment.ts","./src/app/common/post/post.component.ts","./src/app/common/post/post.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/common/top-nav/top-nav.component.ts","./src/app/common/top-nav/top-nav.component.html","./src/app/app.module.ts","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PostsService, IPost } from 'src/app/posts.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public posts: IPost[];\n\n  constructor(private postsService: PostsService, private modalService: NgbModal) {\n    this.posts = [];\n  }\n\n  open(content: any) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'});\n  }\n\n  ngOnInit(): void {\n    this.posts = this.postsService.posts;\n  }\n\n  addPost(form: NgForm): void {\n    this.modalService.dismissAll();\n    this.postsService.addPost(form.value.message, form.value.name, new Date());\n  }\n}\n","<div class=\"Home\">\n  <div class=\"welcome-container\">\n    <h1>Welcome To <br/><strong>Example Project</strong></h1>\n  </div>\n  <div class=\"accordion-container\">\n    <ngb-accordion [closeOthers]=\"true\" >\n      <ngb-panel id=\"static-1\" title=\"Example Introductory Video\">\n        <ng-template ngbPanelContent>\n          <iframe style=\"max-width: 80%; min-width: 360px;\" width=\"1280\" height=\"720\" src=\"https://www.youtube.com/embed/k5E2AVpwsko\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        </ng-template>\n      </ngb-panel>\n      <ngb-panel id=\"static-2\">\n        <ng-template ngbPanelTitle>\n          <span>Example Services</span>\n        </ng-template>\n        <ng-template ngbPanelContent>\n          <ngb-carousel >\n            <ng-template ngbSlide>\n              <div class=\"img-wrapper\">\n                <img src=\"https://www.desktopbackground.org/download/1920x1080/2011/06/11/217262_cool-dark-computer-backgrounds-hd-wallpapers_1920x1200_h.jpg\" alt=\"Random first slide\">\n              </div>\n              <div class=\"carousel-caption\">\n                <h3>Software Development</h3>\n                <p>Providing the solution for your custom software development from start to finish, and updating!</p>\n              </div>\n            </ng-template>\n            <ng-template ngbSlide>\n              <div class=\"img-wrapper\">\n                <img src=\"https://wallpaperaccess.com/full/1857434.jpg\" alt=\"Random second slide\">\n              </div>\n              <div class=\"carousel-caption\">\n                <h3>Website Development</h3>\n                <p>Grade A Websites produced and maintained by yours truly!</p>\n              </div>\n            </ng-template>\n            <ng-template ngbSlide>\n              <div class=\"img-wrapper\">\n                <img src=\"https://wallpaperaccess.com/full/2454628.png\" alt=\"Random third slide\">\n              </div>\n              <div class=\"carousel-caption\">\n                <h3>Ongoing Support</h3>\n                <p>Support is provided at each and every step of our development services!</p>\n              </div>\n            </ng-template>\n          </ngb-carousel>\n        </ng-template>\n      </ngb-panel>\n\n    </ngb-accordion>\n  </div>\n  <button type=\"button\" (click)=\"open(content)\" class=\"btn btn-outline-secondary mr-2\" placement=\"bottom\" ngbTooltip=\"Will soon connect to an API written in C#!\">\n    Create Post\n  </button>\n  <div class=\"post-container\">\n    <app-post *ngFor=\"let post of posts\" [name]=\"post.name\" [date]=\"post.date\" [message]=\"post.message\"></app-post>\n  </div>\n\n\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Create A Post</h4>\n      <button type=\"button\" style=\"border-radius: 50%;\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <form #addPostForm=\"ngForm\" (ngSubmit)=\"addPost(addPostForm)\" novalidate>\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input id=\"name\" class=\"form-control\" placeholder=\"Your name\" #name ngModel name=\"name\">\n          <br/>\n          <label for=\"message\">Message</label>\n          <input type=\"textarea\" id=\"message\" class=\"form-control\" #message name=\"message\" ngModel placeholder=\"Your message\"/>\n        </div>\n        <button style=\"margin-top: 20px;\" type=\"submit\" class=\"btn btn-outline-dark\">Done</button>\n      </form>\n    </div>\n\n  </ng-template>\n</div>\n","import { Injectable, OnInit } from '@angular/core';\n\nexport interface IPost {\n  name: string | null;\n  message: string | null;\n  date: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n  public posts: IPost[];\n\n  constructor() {\n    //fill one post automatically\n    let date = new Date();\n\n    this.posts = [\n      {\n        name: \"Tyler Sandoe\",\n        message: \"FIRST POST!\",\n        date: this.getDateString(new Date())\n      }\n    ];\n  }\n\n  private getDateString(date: Date): string {\n    let amOrPm=' AM';\n    //At 00 hours we need to show 12 am\n    if(date.getHours() >= 12)\n    {\n      amOrPm=' PM';\n    }\n    let dateString = new Date().toLocaleString();\n    return dateString.substring(0, dateString.length - 6) + amOrPm;\n  }\n\n  //For now, done on client side, in future will reach the API and do a post request\n  //get rid of date parameter in future and do it on server side\n  addPost(message: string | null, name: string | null, date: Date){\n    this.posts.push({\n      message: message,\n      name: name,\n      date: this.getDateString(date)\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n  @Input() public name: string | null = null;\n  @Input() public date: string | null = null;\n  @Input() public message: string | null = null;\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Post\">\n  <div class=\"top-row\">\n    <div class=\"left-aligned\">\n      {{name}}\n    </div>\n    <div class=\"right-aligned\">\n      {{date}}\n    </div>\n  </div>\n  <div class=\"message-wrapper\">\n    {{message}}\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<div class=\"body\">\n  <app-top-nav></app-top-nav>\n\n  <router-outlet></router-outlet>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-nav',\n  templateUrl: './top-nav.component.html',\n  styleUrls: ['./top-nav.component.scss']\n})\nexport class TopNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs\">\n  <li ngbNavItem>\n    <a ngbNavLink [routerLink]=\"['/home']\">Home</a>\n  </li>\n  <li ngbNavItem>\n    <a ngbNavLink [routerLink]=\"['/about']\">About</a>\n  </li>\n</ul>\n<div [ngbNavOutlet]=\"nav\"></div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TopNavComponent } from './common/top-nav/top-nav.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { PostComponent } from './common/post/post.component';\nimport { FormsModule }   from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopNavComponent,\n    HomeComponent,\n    AboutComponent,\n    PostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p style=\"margin: 20px;\">This is an example website to show proficiency in Angular as well as API development in C#.</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from './pages/about/about.component';\nimport { HomeComponent } from './pages/home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}